<?jelly?>
<j:jelly xmlns:j="jelly:core" xmlns:l="/lib/layout" xmlns:f="/lib/form" xmlns:st="jelly:stapler">

    <l:layout title="Deployment History">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.0/knockout-min.js" type="text/javascript" ></script>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"></link>
        <st:include page="sidepanel.jelly" it="${it.run}" optional="true" />
        <l:main-panel>
        <style>
                    #history {
                        border-collapse: collapse;
                        width: 100%;
                    }

                    #history th {
                        padding-top: 12px;
                        padding-bottom: 12px;
                        text-align: left;
                        background-color: #d1e784;
                        color: #092834;
                    }

                    #history th.previous {
                        background-color: #e1efad;
                        color: black;
                    }

                    #history th.country_heading {
                        background-color: #F0F7D4;
                        color: black;
                    }

                    .current {
                        background-color: #d1e784;
                        color: #092834;
                    }

                    .country {
                        background-color: #F0F7D4;
                        color: #black;
                    }

                    .modal-header {
                        background-color: #B2D732;
                        color: #black;
                    }

                    .modal-table {
                        background-color: #F0F7D4;
                        color: #black;
                        width: 100%;
                    }

                    .previous {
                        background-color: #e1efad;
                        color: black;
                    }

                    #history > tbody > tr:hover td {
                        background-color: #B2D732!important;
                        color: black;
                    }

                    #history_modal > thead > tr > th {
                        text-align: left;
                    }

                    #history_modal > tbody > tr:hover {
                        background-color: #B2D732;
                        color: black;
                    }

                    .nav_bar {
                        color: #F0F7D4!important;
                        background-color: #092834!important;

                    }

                    .nav_bar_selected {
                        color: black!important;
                        background-color: #B2D732!important;

                    }

                    .action-item {
                        color: #black!important;
                        background-color: #B2D732!important;
                    }

                    .sub-item {
                        color: #black!important;
                        background-color: #d1e784!important;
                    }

                    .card-footer {
                        padding-bottom: 1em;
                    }

                    .card-background {
                        background-color: #f0f7d6;
                    }

                    .page {
                        background-color: #fafdf3;
                    }



                </style>

        <div class="w3-bar nav_bar">
            <button class="w3-bar-item w3-button nav_bar_selected" onclick="openTab(event, 'history_tab')">History</button>
            <button class="w3-bar-item w3-button" onclick="openTab(event, 'settings_tab')">Settings</button>
        </div>
        <div id="history_tab" class="tab">
            <div class="w3-container page">
                <div class="w3-card-4 card-background">
                    <div class="w3-panel w3-round action-item">
                        <h3>1 Choose an environment</h3>
                    </div>
                    <div class="w3-panel card-footer">
                        <select id="environment-list" class="w3-select w3-border" data-bind="options: $root.environments, value: env, optionsText: 'deploymentEnv'">
                        </select>
                    </div>
                </div>
                <br/><br/><br/>
                <div class="w3-card-4 card-background">
                    <div class="w3-panel w3-round action-item">
                        <h3>2 View history</h3>
                    </div>
                    <div class="w3-panel card-footer">
                        <table id="history">
                        <thead>
                        <tr>
                            <th class="country_heading" colspan="1"></th>
                            <th class="previous" colspan="5">Previous</th>
                            <th colspan="5">Current</th>
                        </tr>
                        <tr>
                            <th class="country_heading">Country</th>
                            <th class="previous">Version</th>
                            <th class="previous">Build #</th>
                            <th class="previous">Date</th>
                            <th class="previous">Branch</th>
                            <th class="previous">Status</th>

                            <th>Version</th>
                            <th>Build #</th>
                            <th>Date</th>
                            <th>Branch</th>
                            <th>Status</th>
                        </tr>
                        </thead>
                        <tbody data-bind="foreach: environment(), visible: environment().length > 0">
                        <tr data-bind="click: $parent.onCountryClick">
                            <td class="country" data-bind="text: name"></td>
                            <td class="previous" data-bind="if: previousDeploymentStats"><span data-bind="text: previousDeploymentStats.artifactVersion"></span></td>
                            <td class="previous" data-bind="if: previousDeploymentStats"><span data-bind="text: previousDeploymentStats.buildNumber"></span></td>
                            <td class="previous" data-bind="if: previousDeploymentStats"><span data-bind="text: previousDeploymentStats.dateDisplay"></span></td>
                            <td class="previous" data-bind="if: previousDeploymentStats"><span data-bind="text: previousDeploymentStats.branchName"></span></td>
                            <td class="previous" data-bind="if: previousDeploymentStats"><span data-bind="text: previousDeploymentStats.status"></span></td>

                            <td class="current" data-bind="if: currentDeploymentStats"><span data-bind="text: currentDeploymentStats.artifactVersion"></span></td>
                            <td class="current" data-bind="if: currentDeploymentStats"><span data-bind="text: currentDeploymentStats.buildNumber"></span></td>
                            <td class="current" data-bind="if: currentDeploymentStats"><span data-bind="text: currentDeploymentStats.dateDisplay"></span></td>
                            <td class="current" data-bind="if: currentDeploymentStats"><span data-bind="text: currentDeploymentStats.branchName"></span></td>
                            <td class="current" data-bind="if: currentDeploymentStats"><span data-bind="text: currentDeploymentStats.status"></span></td>
                        </tr>
                        </tbody>
                    </table>
                    </div>
                    <div id="id01" class="w3-modal" style="display: none">
                        <div class="w3-modal-content">
                            <header class="w3-container modal-header"><span
                                    onclick="document.getElementById('id01').style.display='none'"
                                    class="w3-button w3-display-topright">X</span>
                                <h2>History: <span data-bind="text: selectedCountryName()"></span></h2></header>
                            <div class="w3-modal-content">
                                <table id="history_modal" class="modal-table">
                                    <thead>
                                    <tr>
                                        <th>Version</th>
                                        <th>Build #</th>
                                        <th>Date</th>
                                        <th>Branch</th>
                                        <th>Status</th>
                                    </tr>
                                    </thead>
                                    <tbody data-bind="foreach: selectedCountryStats(), visible: selectedCountryStats().length > 0">
                                    <tr>
                                        <td data-bind="text: artifactVersion"></td>
                                        <td data-bind="text: buildNumber"></td>
                                        <td data-bind="text: dateDisplay"></td>
                                        <td data-bind="text: branchName"></td>
                                        <td data-bind="text: status"></td>
                                    </tr>
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>
                <br/><br/><br/>
                <div class="w3-card-4 card-background">
                    <div class="w3-panel w3-round action-item">
                        <h3>3 Deploy</h3>
                    </div>
                    <div class="w3-panel card-footer">
                        <input class="w3-radio" type="radio" name="deployment-type" value="promote" data-bind="checked: releaseType"></input>
                        <label>Promote release</label>

                        <input class="w3-radio" type="radio" name="deployment-type" value="new" data-bind="checked: releaseType"></input>
                        <label>Create new release</label>

                        <div data-bind="visible: releaseType() === 'promote'" class="promote_release_view">
                            <div class="w3-panel w3-round sub-item">
                                <h5>Select a branch</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <select id="branch-list" class="w3-select w3-border" data-bind="options: $root.deploymentDetail().deployable, optionsText: 'branchName', value: selectedBranch">
                                </select>
                            </div>
                            <div class="w3-panel w3-round sub-item">
                                <h5>Select a version</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <select id="artifact-list" class="w3-select w3-border" data-bind="options: $root.availableArtifacts(), value: selectedArtifact">
                                </select>
                            </div>
                            <div class="w3-panel w3-round sub-item">
                                <h5>Select a country</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <ul class="w3-ul" data-bind="foreach: deploymentDetail().deployableCountriesList">
                                    <li class="w3-hover-green">
                                        <input class="w3-check" type="checkbox" data-bind="checkedValue: $data, checked: $root.selectedDeployableCountries"/>
                                        <span data-bind="text: $data"></span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div data-bind="visible: releaseType() === 'new'" class="create_release_view">
                            <div class="w3-panel w3-round sub-item">
                                <h5>Select a branch</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <select id="branch-list" class="w3-select w3-border" data-bind="options: $root.deploymentDetail().deployable, optionsText: 'branchName', value: selectedBranch">
                                </select>
                            </div>
                            <div class="w3-panel w3-round sub-item">
                                <h5>Select a build number</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <select id="build-list" class="w3-select w3-border" data-bind="options: $root.availableBuilds(), value: selectedBuild">
                                </select>
                            </div>
                            <div class="w3-panel w3-round sub-item">
                                <h5>Enter a major version</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <input class="w3-input w3-border" data-bind="textInput: majorVersion" name="majorVersion" type="text" placeholder="13, 14 or 15 etc."/>
                            </div>

                            <div class="w3-panel w3-round sub-item">
                                <h5>Select a country</h5>
                            </div>
                            <div class="w3-panel card-footer">
                                <ul class="w3-ul" data-bind="foreach: deploymentDetail().deployableCountriesList">
                                    <li class="w3-hover-green">
                                        <input class="w3-check" type="checkbox" data-bind="checkedValue: $data, checked: $root.selectedDeployableCountries"/>
                                        <span data-bind="text: $data"></span>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <button data-bind="visible: releaseType() === 'promote' || releaseType() === 'new',
                                            enable: shouldBeEnabled(),
                                            click: deploy"
                                class="w3-btn w3-green w3-hover-red w3-round-large">Deploy</button>
                        <div class="w3-panel w3-pale-yellow" data-bind="visible: releaseType() === 'promote' || releaseType() === 'new', if: response">
                          <h3>Status</h3>
                          <p data-bind="text: response().status + response().statusText"></p>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div id="settings_tab" class="tab" style="display:none">
            <h2>Settings</h2>
        </div>

    <script>//<![CDATA[

                ko.observableArray.fn.find = function(prop, data) {
                    var valueToMatch = data[prop];
                    return ko.utils.arrayFirst(this(), function(item) {
                        return item[prop] === valueToMatch;
                    });
                };

                var appModel;
                function AppViewModel() {
                    appModel = this;
                    this.environments = ko.observableArray([
                        {
                            deploymentEnv: undefined
                        },
                        {
                            deploymentEnv: "SIT"
                        },
                        {
                            deploymentEnv: "UAT"
                        },
                        {
                            deploymentEnv: "PRE"
                        },
                        {
                            deploymentEnv: "PROD"
                        }
                    ]);
                    this.env =  ko.observable({});
                    this.env.subscribe(function(event){
                        if(event.deploymentEnv !== undefined)
                            getDeploymentStatisticsForEnvironment(event.deploymentEnv)
                    });

                    this.selectedCountryStats = ko.observableArray([])
                    this.selectedCountryName = ko.observable('');

                    this.environment = ko.observableArray([])

                    this.selectedBranch = ko.observable('');
                    this.availableBuilds = ko.observable('');
                    this.availableArtifacts = ko.observable('');
                    this.selectedBranch.subscribe(function(event){
                        if(event){
                            if(appModel.releaseType() === 'new'){
                                appModel.availableBuilds(event.availableBuilds);
                            } else {
                                appModel.availableArtifacts(event.availableArtifacts);
                            }
                            appModel.isDeployable(appModel.canDeploy());
                        }
                    });
                    this.releaseType = ko.observable('');
                    this.releaseType.subscribe(function(event){
                        if(event){
                            appModel.availableBuilds('');
                            appModel.availableArtifacts('');
                            appModel.selectedBranch('');
                            appModel.isDeployable(appModel.canDeploy());
                        }
                    });

                    this.selectedDeployableCountries = ko.observableArray([]);
                    this.majorVersion = ko.observable('');
                    this.majorVersion.subscribe(function(event){
                        appModel.isDeployable(appModel.canDeploy());
                    });
                    this.selectedBuild = ko.observable('');
                    this.selectedBuild.subscribe(function(event){
                        appModel.isDeployable(appModel.canDeploy());
                    });
                    this.selectedArtifact = ko.observable('');
                    this.selectedArtifact.subscribe(function(event){
                        appModel.isDeployable(appModel.canDeploy());
                    });

                    this.selectedDeployableCountries.subscribe(function(selected){
                        if(selected && selected.length > 0){
                            var isAllChecked = selected.find(function(country){
                                return country === 'All'
                            });
                            if(isAllChecked){
                                while (selected.length > 0) {
                                    appModel.selectedDeployableCountries().pop()
                                }

                                appModel.deploymentDetail().deployableCountriesList.forEach(function (stat) {
                                    appModel.selectedDeployableCountries().push(stat)
                                })
                            }
                        }
                        appModel.isDeployable(appModel.canDeploy());
                    });

                    this.isDeployable = ko.observable(false);

                    this.deploymentDetail = ko.observable('');

                    this.deployButtonDisable = ko.observable(false);

                    this.shouldBeEnabled = ko.computed(function() {
                        return !this.deployButtonDisable() && this.isDeployable();
                    }, this);

                    this.response = ko.observable();

                    this.canDeploy = function () {
                        if(appModel.releaseType() === 'promote'){
                            return (appModel.selectedArtifact() && appModel.selectedArtifact() !== '')
                                    && (appModel.selectedBranch() && appModel.selectedBranch() !== '')
                                    && (appModel.selectedDeployableCountries() && appModel.selectedDeployableCountries().length > 0)

                        } else if(appModel.releaseType() === 'new'){
                            return (appModel.selectedBuild() && appModel.selectedBuild() !== '')
                                && (appModel.selectedBranch() && appModel.selectedBranch() !== '')
                                && (appModel.majorVersion() && appModel.majorVersion() !== '')
                                && (appModel.selectedDeployableCountries() && appModel.selectedDeployableCountries().length > 0)

                        } else{
                            return false;
                        }
                    };

                    this.onCountryClick = function(click) {
                        document.getElementById('id01').style.display='block'
                        if(click.deploymentStats) {
                            appModel.selectedCountryName(click.name);
                            while(appModel.selectedCountryStats().length > 0) {
                                appModel.selectedCountryStats.pop()
                            }

                            click.deploymentStats.forEach(function(stat){
                                appModel.selectedCountryStats.push(stat)
                            })

                        }

                    }

                    this.deploy = function () {
                        var deploymentCountryParam = '';
                        var buildNumberParam = '';
                        var branchNameParam = '';
                        var majorVersionParam = '';
                        var appNameParam = '&APP_NAME=' + appModel.deploymentDetail().appName;
                        var urlParams = appModel.deploymentDetail().url + 'buildWithParameters?token=D6B973260A7C44E7AE4622EADC959B19&';
                        if(appModel.releaseType() === 'new') {
                            buildNumberParam = 'BUILD_NUMBER=' + appModel.selectedBuild();
                            branchNameParam = '&BRANCH_NAME=' + encodeURIComponent(appModel.selectedBranch().branchName);
                            majorVersionParam = '&MAJOR_VERSION=' + appModel.majorVersion();

                        } else if(appModel.releaseType() === 'promote') {
                            var splitArtifact = appModel.selectedArtifact().split(".");
                            buildNumberParam = 'BUILD_NUMBER=' + splitArtifact[1];
                            branchNameParam = '&BRANCH_NAME=' + encodeURIComponent(appModel.selectedBranch().branchName);
                            majorVersionParam = '&MAJOR_VERSION=' + splitArtifact[0];

                        } else {
                            throw new Error('Unknown release type')
                        }


                        if(appModel.selectedDeployableCountries().find(function(country){
                            return country === 'All'
                        })){
                            appModel.deploymentDetail().deployableCountriesList.forEach(function (country) {
                                if(country !== 'All') {
                                    deploymentCountryParam = deploymentCountryParam + 'SKIP_'+country.replace(' ','_').toUpperCase()+'_INPUT=true&';
                                }
                            })

                        } else {
                            appModel.selectedDeployableCountries().forEach(function(country){
                                deploymentCountryParam = deploymentCountryParam + 'SKIP_'+country.replace(' ','_').toUpperCase()+'_INPUT=true&';
                            });
                        }
                        urlParams = urlParams + deploymentCountryParam + buildNumberParam + branchNameParam + majorVersionParam + appNameParam;
                        console.log(encodeURI(urlParams));
                        appModel.deployButtonDisable(true);
                        new Ajax.Request(urlParams, {
                                                    method: 'POST',
                                                    parameters: {},
                                                    onSuccess: function(response) {
                                                        if(response.status === 201){
                                                            appModel.deployButtonDisable(false);
                                                        }
                                                        appModel.response(response)
                                                    },
                                                    onFailure: function(response) {
                                                            appModel.deployButtonDisable(false);
                                                            appModel.response(response)
                                                    }
                                            });
                    }

                }

                function getDeploymentStatisticsForEnvironment(env){
                    new Ajax.Request('deploymentStatisticsForEnvironment', {
                                            method: 'GET',
                                            parameters: {selectedEnv: env},
                                            onSuccess: function(response) {
                                                while(appModel.environment().length > 0) {
                                                    appModel.environment.pop()
                                                }
                                                if(response.responseJSON){
                                                    response.responseJSON.countries.forEach(function(country){
                                                        appModel.environment.push(country)
                                                    })
                                                }
                                            }
                    });
                }

                function getProjectDetails(){
                    new Ajax.Request('getProjectDetails', {
                                            method: 'GET',
                                            parameters: {},
                                            onSuccess: function(response) {
                                                if(response.responseJSON){
                                                    var found = appModel.environments.find("deploymentEnv", response.responseJSON)
                                                    appModel.env(found)
                                                }
                                            }
                    });
                }

                function getDeploymentDetails(){
                    new Ajax.Request('getDeploymentDetails', {
                                            method: 'GET',
                                            parameters: {},
                                            onSuccess: function(response) {
                                                if(response.responseJSON){
                                                    appModel.deploymentDetail(response.responseJSON);
                                                }
                                            }
                    });
                }

                function openTab(evt, id) {
                    var x = document.getElementsByClassName('tab')

                    for(var i = 0; i < x.length; i++){
                        x[i].style.display = 'none'
                    }


                    var links = document.getElementsByClassName('w3-bar-item')

                    for(var i = 0; i < links.length; i++){
                        links[i].className = links[i].className.replace(' nav_bar_selected', '')
                    }


                    document.getElementById(id).style.display = 'block'
                    evt.currentTarget.className = evt.currentTarget.className + ' nav_bar_selected'
                }

                ko.applyBindings(new AppViewModel());
                getProjectDetails();
                getDeploymentDetails();


        //]]></script>
        </l:main-panel>
    </l:layout>

</j:jelly>
